buildscript {
    repositories {
        jcenter()
        maven {
            name = "Forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "Sonatype"
            url = 'https://oss.sonatype.org/content/groups/public'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id 'com.matthewprenger.cursegradle' version '1.0.9'
}

repositories {
    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the nessasary things for Forge to be setup.


version = "${version_minecraft}-${version_compile}"
group= ""
archivesBaseName = "${compile_name}"

repositories {
    maven {//This is where OC API is
        url = "http://modmaven.k-4u.nl"
    }
	maven {
		url = 'http://maven.mcmoddev.com'
	}
	maven {
		url "http://dvs1.progwml6.com/files/maven"
	}
	maven {
		name = "ic2"
		url = "http://maven.ic2.player.to/"
	}
	maven {
		name = "Modmuss50"
		url = "http://maven.modmuss50.me"
	}
	maven {
		url = 'https://mod-buildcraft.com/maven'
	}    
    maven { // TOP
        name 'tterrag maven'
        url "http://maven.tterrag.com/"
    }
	maven { 
        url "https://maven.latmod.com/" 
    }
}

dependencies {
    //Thut Core
    deobfCompile "thutcore:thutcore:${version_minecraft}:${version_thutcore}"
    //Thut Wearables
    deobfCompile "thut-wearables:thut-wearables:release:deobf"
    //Open Computers API
    deobfCompile "li.cil.oc:OpenComputers:MC1.12.+:api"
    
    //Pokecube Core
    deobfCompile "pokecube-core:pokecube-core:release:deobf"
    //Pokecube Mobs
    deobfCompile "pokecube-mobs:pokecube-mobs:release:deobf"
    
    //Things for compat
    //Thut Essentials
    deobfCompile "thut-essentials:thutessentials:${version_minecraft}:${version_thutessentials}"
    //Thut Bling
    deobfCompile "thut-bling:thut_bling:${version_minecraft}:${version_thutbling}"
    //Tesla
	deobfProvided "net.darkhax.tesla:Tesla-${tesla_mcversion}:${tesla_version}"
    //JEI
	deobfProvided "mezz.jei:jei_${jei_mcversion}:${jei_version}:api"
	compile "mezz.jei:jei_${jei_mcversion}:${jei_version}"
    //JER
    deobfCompile "just-enough-resources-jer:JustEnoughResources:${version_minecraft}:${version_jer}"
    //Inventory tweaks
    compile "inventory-tweaks:InventoryTweaks:1.63:api"
    //TOP
    compileOnly "mcjty.theoneprobe:TheOneProbe-1.12:1.12-1.+"//1.1x-1.4.4-55
    //IE
    deobfCompile "blusunrize:ImmersiveEngineering:${ie_version}"
    //Journeymap
    provided "info.journeymap:journeymap-api:${journeymap_version}"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = "${version_long}"
    runDir = "run"
    mappings = "${version_mappings}"
    useDepAts = false
    
    replace "@VERSION", project.version_compile
    replaceIn "PokecubeAdv.java"
    replace "@MCVERSION", "${version_mcsupport}"
    replaceIn "PokecubeAdv.java"
    replace "@MINVERSION", "[${version_min_support},)"
    replaceIn "PokecubeAdv.java"
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

artifacts {
    archives deobfJar
}

jar {
        manifest {
            attributes "FMLAT": "${at_file}"
    }
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
